class Foo (a :: k0) where
  type family Bar (a :: k0) b
    Kind: forall k1. k1 -> * -> *
  	-- Defined at T7939.hs:6:4
Bar :: k0 -> * -> *
type family F a
  Kind: * -> *
  	-- Defined at T7939.hs:8:1
type instance F Int = Bool 	-- Defined at T7939.hs:9:1
F :: * -> *
type family G a
  Kind: * -> *
  where
    G Int = Bool
  	-- Defined at T7939.hs:11:1
G :: * -> *
type family H (a :: Bool)
  Kind: Bool -> Bool
  where
    H 'False = 'True
  	-- Defined at T7939.hs:14:1
H :: Bool -> Bool
type family J (a :: [a0])
  Kind: forall a1. [a1] -> Bool
  where
    J a0 '[] = 'False
  forall a0 (h :: a0) (t :: [a0]). J a0 (h : t) = 'True
  	-- Defined at T7939.hs:17:1
J :: [a0] -> Bool
type family K (a :: [a0])
  Kind: forall a1. [a1] -> Maybe a1
  where
    K a0 '[] = 'Nothing
  forall a0 (h :: a0) (t :: [a0]). K a0 (h : t) = 'Just h
  	-- Defined at T7939.hs:21:1
K :: [a0] -> Maybe a0
