
WildcardInstantiations.hs:5:14: error:
    Found type wildcard ‘_a’ standing for ‘a0’
    Where: ‘a0’ is a rigid type variable bound by
                the inferred type of foo :: (Enum a0, Show a0) => a0 -> String
                at WildcardInstantiations.hs:6:1
    To use the inferred type, enable PartialTypeSignatures
    In the type signature for:
      foo :: (Show _a, _) => _a -> _

WildcardInstantiations.hs:5:18: error:
    Found hole ‘_’ with inferred constraints: Enum a0
    To use the inferred type, enable PartialTypeSignatures
    In the type signature for:
      foo :: (Show _a, _) => _a -> _

WildcardInstantiations.hs:5:30: error:
    Found type wildcard ‘_’ standing for ‘String’
    To use the inferred type, enable PartialTypeSignatures
    In the type signature for:
      foo :: (Show _a, _) => _a -> _

WildcardInstantiations.hs:8:8: error:
    Found type wildcard ‘_’ standing for ‘t0’
    Where: ‘t0’ is a rigid type variable bound by
                the inferred type of bar :: t0 -> (t0 -> t1) -> t1
                at WildcardInstantiations.hs:9:1
    To use the inferred type, enable PartialTypeSignatures
    In the type signature for:
      bar :: _ -> _ -> _

WildcardInstantiations.hs:8:13: error:
    Found type wildcard ‘_’ standing for ‘t0 -> t1’
    Where: ‘t0’ is a rigid type variable bound by
                the inferred type of bar :: t0 -> (t0 -> t1) -> t1
                at WildcardInstantiations.hs:9:1
           ‘t1’ is a rigid type variable bound by
                the inferred type of bar :: t0 -> (t0 -> t1) -> t1
                at WildcardInstantiations.hs:9:1
    To use the inferred type, enable PartialTypeSignatures
    In the type signature for:
      bar :: _ -> _ -> _

WildcardInstantiations.hs:8:18: error:
    Found type wildcard ‘_’ standing for ‘t1’
    Where: ‘t1’ is a rigid type variable bound by
                the inferred type of bar :: t0 -> (t0 -> t1) -> t1
                at WildcardInstantiations.hs:9:1
    To use the inferred type, enable PartialTypeSignatures
    In the type signature for:
      bar :: _ -> _ -> _
