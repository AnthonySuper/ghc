
mc22.hs:10:9:
    No instance for (Functor _t) arising from a use of ‘fmap’
    Possible fix:
      add (Functor _t) to the context of
        a type expected by the context: (a -> b) -> _t a -> _t b
        or the inferred type of foo :: [_t [Char]]
    In the expression: fmap
    In a stmt of a monad comprehension: then group using take 5
    In the expression:
      [x + 1 | x <- ["Hello", "World"], then group using take 5]

mc22.hs:10:26:
    Couldn't match type ‘a’ with ‘_t a’
      ‘a’ is a rigid type variable bound by
          a type expected by the context: [a] -> [_t a] at mc22.hs:10:9
       Expected type: [a] -> [_t a]
         Actual type: [_t a] -> [_t a]
    Relevant bindings include foo :: [_t [Char]] (bound at mc22.hs:8:1)
    In the expression: take 5
    In a stmt of a monad comprehension: then group using take 5
