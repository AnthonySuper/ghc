
T9662.hs:46:4: error:
    Couldn't match type ‘k’ with ‘m’
    ‘k’ is a rigid type variable bound by
        the type signature for:
        test :: Shape (((sh :. k) :. m) :. n)
                -> Shape (((sh :. m) :. n) :. k)
        at T9662.hs:44:9
    ‘m’ is a rigid type variable bound by
        the type signature for:
        test :: Shape (((sh :. k) :. m) :. n)
                -> Shape (((sh :. m) :. n) :. k)
        at T9662.hs:44:9
    Expected type: Shape (((sh :. k) :. m) :. n)
                   -> Shape (((sh :. m) :. n) :. k)
      Actual type: Shape (((sh :. m) :. n) :. k)
                   -> Shape (((sh :. m) :. n) :. k)
    Relevant bindings include
      test :: Shape (((sh :. k) :. m) :. n)
              -> Shape (((sh :. m) :. n) :. k)
        (bound at T9662.hs:45:1)
    In the expression:
      backpermute
        (modify
           (atom :. atom :. atom :. atom)
           (\ (sh :. k :. m :. n) -> (sh :. m :. n :. k)))
        id
    In an equation for ‘test’:
        test
          = backpermute
              (modify
                 (atom :. atom :. atom :. atom)
                 (\ (sh :. k :. m :. n) -> (sh :. m :. n :. k)))
              id

T9662.hs:46:4: error:
    Couldn't match type ‘m’ with ‘n’
    ‘m’ is a rigid type variable bound by
        the type signature for:
        test :: Shape (((sh :. k) :. m) :. n)
                -> Shape (((sh :. m) :. n) :. k)
        at T9662.hs:44:9
    ‘n’ is a rigid type variable bound by
        the type signature for:
        test :: Shape (((sh :. k) :. m) :. n)
                -> Shape (((sh :. m) :. n) :. k)
        at T9662.hs:44:9
    Expected type: Shape (((sh :. k) :. m) :. n)
                   -> Shape (((sh :. m) :. n) :. k)
      Actual type: Shape (((sh :. m) :. n) :. k)
                   -> Shape (((sh :. m) :. n) :. k)
    Relevant bindings include
      test :: Shape (((sh :. k) :. m) :. n)
              -> Shape (((sh :. m) :. n) :. k)
        (bound at T9662.hs:45:1)
    In the expression:
      backpermute
        (modify
           (atom :. atom :. atom :. atom)
           (\ (sh :. k :. m :. n) -> (sh :. m :. n :. k)))
        id
    In an equation for ‘test’:
        test
          = backpermute
              (modify
                 (atom :. atom :. atom :. atom)
                 (\ (sh :. k :. m :. n) -> (sh :. m :. n :. k)))
              id

T9662.hs:46:4: error:
    Couldn't match type ‘n’ with ‘k’
    ‘n’ is a rigid type variable bound by
        the type signature for:
        test :: Shape (((sh :. k) :. m) :. n)
                -> Shape (((sh :. m) :. n) :. k)
        at T9662.hs:44:9
    ‘k’ is a rigid type variable bound by
        the type signature for:
        test :: Shape (((sh :. k) :. m) :. n)
                -> Shape (((sh :. m) :. n) :. k)
        at T9662.hs:44:9
    Expected type: Shape (((sh :. k) :. m) :. n)
                   -> Shape (((sh :. m) :. n) :. k)
      Actual type: Shape (((sh :. m) :. n) :. k)
                   -> Shape (((sh :. m) :. n) :. k)
    Relevant bindings include
      test :: Shape (((sh :. k) :. m) :. n)
              -> Shape (((sh :. m) :. n) :. k)
        (bound at T9662.hs:45:1)
    In the expression:
      backpermute
        (modify
           (atom :. atom :. atom :. atom)
           (\ (sh :. k :. m :. n) -> (sh :. m :. n :. k)))
        id
    In an equation for ‘test’:
        test
          = backpermute
              (modify
                 (atom :. atom :. atom :. atom)
                 (\ (sh :. k :. m :. n) -> (sh :. m :. n :. k)))
              id
